// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"vax/internal/base/dao"
	"vax/internal/controller"
	"vax/internal/repo"
	"vax/internal/router"
	"vax/internal/service"
	"vax/internal/service/adverse_report"
	"vax/internal/service/oae"
	"vax/internal/service/user"
	"vax/internal/service/vaccine"
	"vax/internal/service/vaers"
)

// Injectors from wire.go:

func InitApplication() (*router.APIRouter, error) {
	engine, err := dao.NewEngine()
	if err != nil {
		return nil, err
	}
	db := dao.NewDB(engine)
	userRepo := repo.NewUserRepo(db)
	userCommon := user.NewUserCommon(userRepo)
	userService := service.NewUserService(userCommon)
	userController := controller.NewUserController(userService)
	vaersResultRepo := repo.NewVaersResultRepo(db)
	vaersResultCommon := vaers.NewVaersResultCommon(vaersResultRepo)
	vaersVaxTermRepo := repo.NewVaersVaxTermRepo(db)
	vaersVaxCommon := vaers.NewVaersVaxCommon(vaersVaxTermRepo)
	vaersSymptomTermRepo := repo.NewVaersSymptomTermRepo(db)
	vaersSymptomCommon := vaers.NewVaersSymptomCommon(vaersSymptomTermRepo)
	vaersService := service.NewVaersService(vaersResultCommon, vaersVaxCommon, vaersSymptomCommon)
	vaersController := controller.NewVaersController(vaersService)
	vaccineRepo := repo.NewVaccineRepo(db)
	vaccineTypeRepo := repo.NewVaccineTypeRepo(db)
	vaccineTypeCommon := vaccine.NewVaccineTypeCommon(vaccineTypeRepo)
	vaccineCommon := vaccine.NewVaccineCommon(vaccineRepo, vaccineTypeCommon)
	vaccineService := service.NewVaccineService(vaccineCommon, vaccineTypeCommon)
	vaccineController := controller.NewVaccineController(vaccineService)
	oaeTermRepo := repo.NewOAETermRepo(db)
	oaeTermCommon := oae.NewOAETermCommon(oaeTermRepo)
	oaeTermService := service.NewOaeTermService(oaeTermCommon)
	oaeTermController := controller.NewOAETermController(oaeTermService)
	adverseEventRepo := repo.NewAdverseEventRepo(db)
	adverseSymptomRepo := repo.NewAdverseSymptomRepo(db)
	adverseVaccineRepo := repo.NewAdverseVaccineRepo(db)
	adverseReportCommon := adverse_report.NewAdverseEventCommon(adverseEventRepo, adverseSymptomRepo, adverseVaccineRepo, vaccineCommon, userCommon)
	adverseResultRepo := repo.NewAdverseResultRepo(db)
	adverseResultCommon := adverse_report.NewAdverseResultCommon(adverseEventRepo, adverseSymptomRepo, adverseVaccineRepo, adverseResultRepo, vaccineCommon, oaeTermCommon)
	adverseReportService := service.NewAdverseReportService(adverseReportCommon, adverseResultCommon, vaccineService)
	adverseReportController := controller.NewAdverseEventController(adverseReportService)
	apiRouter := router.NewAPIRouter(userController, vaersController, vaccineController, oaeTermController, adverseReportController)
	return apiRouter, nil
}
